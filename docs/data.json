{
    "project": {
        "name": "bbcv",
        "version": "0.0.0"
    },
    "files": {
        "js/bbcv/event-handlers.js": {
            "name": "js/bbcv/event-handlers.js",
            "modules": {
                "event-hanlders": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/bbcv/iterators.js": {
            "name": "js/bbcv/iterators.js",
            "modules": {
                "proxy": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/bbcv/model-view.js": {
            "name": "js/bbcv/model-view.js",
            "modules": {
                "item": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "js/bbcv.js": {
            "name": "js/bbcv.js",
            "modules": {
                "bbcv": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "collection-dock": {
            "name": "collection-dock",
            "submodules": {
                "event-hanlders": 1,
                "proxy": 1,
                "item": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "event-hanlders": {
            "name": "event-hanlders",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "collection-dock",
            "namespace": "",
            "file": "js/bbcv/event-handlers.js",
            "line": 1,
            "description": "Defines the event handler for 'add' events on the collection."
        },
        "proxy": {
            "name": "proxy",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "collection-dock",
            "namespace": "",
            "file": "js/bbcv/iterators.js",
            "line": 1,
            "description": "Proxies methods to the collection, if it is present."
        },
        "item": {
            "name": "item",
            "submodules": {},
            "classes": {},
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "collection-dock",
            "namespace": "",
            "file": "js/bbcv/model-view.js",
            "line": 1,
            "description": "Defines methods that generate item-related templates and data.\nMethods here should be overwritten for custom behaviour."
        },
        "bbcv": {
            "name": "bbcv",
            "submodules": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "js/bbcv.js",
            "line": 5,
            "description": "AMD module."
        }
    },
    "classes": {},
    "classitems": [
        {
            "file": "js/bbcv/event-handlers.js",
            "line": 14,
            "description": "Handles add events on the collection.",
            "itemtype": "method",
            "name": "handleAdd",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "model",
                    "description": "",
                    "type": "Model Object"
                }
            ],
            "class": "",
            "module": "collection-dock",
            "submodule": "event-hanlders"
        },
        {
            "file": "js/bbcv/event-handlers.js",
            "line": 26,
            "description": "Handles remove events on the collection.",
            "itemtype": "method",
            "name": "handleRemove",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "model",
                    "description": "",
                    "type": "Model Object"
                }
            ],
            "class": "",
            "module": "collection-dock",
            "submodule": "event-hanlders"
        },
        {
            "file": "js/bbcv/event-handlers.js",
            "line": 37,
            "description": "Handles reset events on the collection.",
            "itemtype": "method",
            "name": "handleReset",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "model",
                    "description": "",
                    "type": "Model Object"
                }
            ],
            "class": "",
            "module": "collection-dock",
            "submodule": "event-hanlders"
        },
        {
            "file": "js/bbcv/event-handlers.js",
            "line": 55,
            "description": "Handles resort events on the collection.",
            "itemtype": "method",
            "name": "handleResort",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "model",
                    "description": "",
                    "type": "Model Object"
                }
            ],
            "class": "",
            "module": "collection-dock",
            "submodule": "event-hanlders"
        },
        {
            "file": "js/bbcv/model-view.js",
            "line": 15,
            "description": "Retrieves the view object at a given index.",
            "itemtype": "method",
            "name": "at",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "collection-dock",
            "submodule": "item"
        },
        {
            "file": "js/bbcv/model-view.js",
            "line": 26,
            "description": "Retrieves the view that represents a given model.\nDoes that by looking up for the model cid.",
            "itemtype": "method",
            "name": "getModelView",
            "class": "",
            "module": "collection-dock",
            "submodule": "item"
        },
        {
            "file": "js/bbcv/model-view.js",
            "line": 45,
            "description": "Removes the view from the 'modelViews' array\nAND invokes the view's 'remove' method.",
            "itemtype": "method",
            "name": "removeModelViewAt",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "promise [description]"
            },
            "class": "",
            "module": "collection-dock",
            "submodule": "item"
        },
        {
            "file": "js/bbcv/model-view.js",
            "line": 62,
            "description": "Deletes the view for a given model/mcid from the modelViews hash.",
            "itemtype": "method",
            "name": "getModelView",
            "params": [
                {
                    "name": "mcid",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "collection-dock",
            "submodule": "item"
        },
        {
            "file": "js/bbcv/model-view.js",
            "line": 80,
            "description": "Private method that adds the model $el to the dom.",
            "params": [
                {
                    "name": "$el",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "index",
                    "description": "[description]",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "",
            "module": "collection-dock",
            "submodule": "item"
        },
        {
            "file": "js/bbcv/model-view.js",
            "line": 110,
            "description": "Builds the itemvieW.",
            "itemtype": "method",
            "name": "addModelView",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "collection-dock",
            "submodule": "item"
        },
        {
            "file": "js/bbcv.js",
            "line": 26,
            "description": "Initialization logic for collectionDock",
            "itemtype": "method",
            "name": "initializeCollectionView",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "bbcv"
        },
        {
            "file": "js/bbcv.js",
            "line": 99,
            "description": "The name of the event of the collection\nthat should trigger handleResort on the view.",
            "type": "{String}",
            "class": "",
            "module": "bbcv"
        },
        {
            "file": "js/bbcv.js",
            "line": 107,
            "description": "The function that compiles the modelHtmlTemplate.\nThe default compiler is lodash's _.template.",
            "type": "{[type]}",
            "class": "",
            "module": "bbcv"
        },
        {
            "file": "js/bbcv.js",
            "line": 116,
            "description": "The html template.\n\nFunction => The compiled template. Will be invoked with the model's\n\t\t\t   ATTRIBUTES object (not with the model itself)\nString   => The source format of the template.\n\t\t\t   Will be compiled on bbcv initialization.",
            "type": "{String}",
            "class": "",
            "module": "bbcv"
        },
        {
            "file": "js/bbcv.js",
            "line": 128,
            "description": "String   => The html string that should be inserted for each model\nFunction => A function, that, given the MODEL, should return an html string\nBoolean (false) => Indicates that no static html was defined, thus we need to\n\t\t\t\t\t  check for modelHtmlTemplate instead",
            "type": "{String|Function|Boolean}",
            "class": "",
            "module": "bbcv"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nPrivate method that adds the model $el to the dom.",
            "line": " js/bbcv/model-view.js:80"
        },
        {
            "message": "Missing item type\nThe name of the event of the collection\nthat should trigger handleResort on the view.",
            "line": " js/bbcv.js:99"
        },
        {
            "message": "Missing item type\nThe function that compiles the modelHtmlTemplate.\nThe default compiler is lodash's _.template.",
            "line": " js/bbcv.js:107"
        },
        {
            "message": "Missing item type\nThe html template.\n\nFunction => The compiled template. Will be invoked with the model's\n\t\t\t   ATTRIBUTES object (not with the model itself)\nString   => The source format of the template.\n\t\t\t   Will be compiled on bbcv initialization.",
            "line": " js/bbcv.js:116"
        },
        {
            "message": "Missing item type\nString   => The html string that should be inserted for each model\nFunction => A function, that, given the MODEL, should return an html string\nBoolean (false) => Indicates that no static html was defined, thus we need to\n\t\t\t\t\t  check for modelHtmlTemplate instead",
            "line": " js/bbcv.js:128"
        }
    ]
}